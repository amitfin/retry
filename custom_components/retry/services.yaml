call:
  fields:
    service:
      example: homeassistant.turn_on
      required: true
      selector:
        text:
    retries:
      example: 5
      selector:
        number:
          min: 1
          max: 100
          unit_of_measurement: retries
          mode: box
    backoff:
      example: "[[ 10 * 2 ** attempt ]]"
      selector:
        text:
    expected_state:
      example: "on"
      selector:
        select:
          multiple: true
          custom_value: true
          options:
            - "on"
            - "off"
            - opening
            - open
            - closing
            - closed
            - cool
            - heat
    validation:
      example: "[[ state_attr(entity_id, 'brightness') == 70 ]]"
      selector:
        text:
    state_delay:
      example: "2"
      selector:
        number:
          min: 0.1
          max: 180.0
          unit_of_measurement: seconds
          mode: box
    state_grace:
      example: "3"
      selector:
        number:
          min: 0.1
          max: 180.0
          unit_of_measurement: seconds
          mode: box
    ignore_target:
      selector:
        boolean:
    on_error:
      selector:
        action:
    repair:
      selector:
        boolean:
    retry_id:
      selector:
        text:
action:
  fields:
    action:
      example: homeassistant.turn_on
      required: true
      selector:
        text:
    retries:
      example: 5
      selector:
        number:
          min: 1
          max: 100
          unit_of_measurement: retries
          mode: box
    backoff:
      example: "[[ 10 * 2 ** attempt ]]"
      selector:
        text:
    expected_state:
      example: "on"
      selector:
        select:
          multiple: true
          custom_value: true
          options:
            - "on"
            - "off"
            - opening
            - open
            - closing
            - closed
            - cool
            - heat
    validation:
      example: "[[ state_attr(entity_id, 'brightness') == 70 ]]"
      selector:
        text:
    state_delay:
      example: "2"
      selector:
        number:
          min: 0.1
          max: 180.0
          unit_of_measurement: seconds
          mode: box
    state_grace:
      example: "3"
      selector:
        number:
          min: 0.1
          max: 180.0
          unit_of_measurement: seconds
          mode: box
    on_error:
      selector:
        action:
    ignore_target:
      selector:
        boolean:
    repair:
      selector:
        boolean:
    retry_id:
      selector:
        text:
actions:
  fields:
    sequence:
      required: true
      selector:
        action:
    retries:
      example: 5
      selector:
        number:
          min: 1
          max: 100
          unit_of_measurement: retries
          mode: box
    backoff:
      example: "[[ 10 * 2 ** attempt ]]"
      selector:
        text:
    expected_state:
      example: "on"
      selector:
        select:
          multiple: true
          custom_value: true
          options:
            - "on"
            - "off"
            - opening
            - open
            - closing
            - closed
            - cool
            - heat
    validation:
      example: "[[ state_attr(entity_id, 'brightness') == 70 ]]"
      selector:
        text:
    state_delay:
      example: "2"
      selector:
        number:
          min: 0.1
          max: 180.0
          unit_of_measurement: seconds
          mode: box
    state_grace:
      example: "3"
      selector:
        number:
          min: 0.1
          max: 180.0
          unit_of_measurement: seconds
          mode: box
    ignore_target:
      selector:
        boolean:
    on_error:
      selector:
        action:
    repair:
      selector:
        boolean:
    retry_id:
      selector:
        text:
